{% extends 'base.html.twig' %}

{% block title %}Hello ScrollPageController!{% endblock %}

{% block body %}
<style>

    .example-wrapper {
        position: relative;
    }

    .scroll-card {
        position: absolute;
        box-shadow: 2px 2px 2px;
        border-radius: 15px;
        background-color: white;
        width: 300px;
        height: 430px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        top: 10px;
        overflow: hidden;
        left: 50%;
        transform: translate(-50%, 0%);
        user-select: none;
    }
    
    h2 {
        margin: 1px;
        
    }

    .scroll-card img {
        height: 300px;
        object-fit: contain;
        transition: transform 0.3s;
         pointer-events: none; 
         user-select: none;
    }

    img:hover {
        transform: scale(1.02) rotate(1deg);
    }

    .card-body {
        width: 100%;
        background-color: white;
        z-index:2;
        line-height: 1;
        text-align: center;
    }

    .none {
        display: none;
    }

</style>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="/">PingoMatch</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link btn" href="/">Accueil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn" href="/mached">Vos matchs</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn" href="/profile">Votre profil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-danger" href="/login">DÃ©connexion</a>
                </li>

            </ul>
        </div>
    </div>
</nav>
<div class="example-wrapper">
    <p class="text-center pt-5">Vous avez parcouru tous les utilisateurs...</p>
    {% for item in users %}
    <div class="scroll-card card border-secondary mb-3">
        <img src="{{ item.img }}" class="card-img-top" alt="{{ item.Name }}">
        <div class="card-body">
            <h2 class="card-title pingo-name">{{ item.Name }}</h2>
            <p class="card-text">{{ item.Description }}</p>
            <div class="">
                <button class="btn btn-success like-btn">Like</button>
                <button class="btn btn-danger btnlike-btn">Dislike</button>
            </div>
        </div>
    </div>
    {% endfor %}
    <p id="user-data" style="display:none;">{{usersJson}}<p>
</div>

<script>
    const scrollCard = document.querySelectorAll('.scroll-card');
    const likeBtn = document.querySelectorAll('.like-btn');
    const dislikeBtn = document.querySelectorAll('.btnlike-btn');
    const pingoName = document.querySelectorAll('.pingo-name');
    const myUser = localStorage.getItem('myUser');
    let userData = JSON.parse(document.getElementById('user-data').innerHTML);
    let matchedArray = [];

    
    likeBtn.forEach((el, index) => {
        el.addEventListener('click', () => {
            scrollCard[index].classList.add('none');
            
            matchedArray.push(pingoName[index].innerHTML);
            localStorage.setItem("matched", matchedArray);
            console.log(localStorage.getItem("matched"));
        });
    });

    dislikeBtn.forEach((el, index) => {
        el.addEventListener('click', () => {
            scrollCard[index].classList.add('none');
            console.log(el.Name);
        });
    });
    
    userData = JSON.parse(userData);
    scrollCard.forEach((card, index) => {
        if (userData[index].Name === myUser) {
            scrollCard[index].classList.add('none');
            console.log('doublon');
        }
    });

    let mouseClick = false;
    let offset = null;
    scrollCard.forEach((card, index) => {
        card.addEventListener('mousemove', () => {
            if (mouseClick) {
                let e = window.event;
                var posX = e.clientX;
                var posY = e.clientY;
                card.style = ` left: ${posX}px;`;
                let ww = window.innerWidth;
                console.log(posX - offset);
                
                if(posX-offset > 200) {
                    scrollCard[index].classList.add('none');
                    matchedArray.push(pingoName[index].innerHTML);
                    localStorage.setItem("matched", matchedArray);
                    mouseClick = false;
                }
                
                if(posX-offset < -200) {
                    scrollCard[index].classList.add('none');
                    mouseClick = false;
                }
                
            }

        })
        card.addEventListener('mousedown', () => {
            mouseClick = true;

            let e = window.event;
            var posX = e.clientX;
            offset = posX;
        })
        card.addEventListener('mouseup', () => {
            mouseClick = false;
            offset = null;
        })
    });

</script>
{% endblock %}
